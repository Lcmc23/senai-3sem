MICROSERVIÇO - Aula 24/09/21

ORGANIZAÇÃO CENÁRIO

    * No VirtualBox, importe um Debian 10
    - Placa de rede: modo bridge

-------------------------------------

VIRTUALIZADOES

    Utilizar o hardware da melhor maneira possível, distribuindo seus recursos nas máquinas virtuais

-------------------------------------

MICROSERVIÇO

    Utilizar apenas o recurso/serviço necessário -> Conteinerização -- Docker

-------------------------------------

DOCKER

    https://docs.docker.com/
    https://docker.com/
    https://docs.docker.com/engine/install/debian/
    https://hub.ocker.com/

    * Docker Engine: principal tecnologia, intermédio entre o S.O e os containers
    * Docker Compose: orquestração de múltiplos containers
    * Docker Swarm: Clusters de Docker Engine
    * Docker Hub: Repositório de Imagens Docker
    * Docker Machine: Permite gerenciar o Docker em um host virtual
    
-------------------------------------

DEBIAN 10 - Config básica

    * Altere a placa de rede
        ip a
        nano /etc/network/interfaces

            <> The primary network interface
            auto enp0s?
            iface enp0s? inet static
                address 192.168.100.1xx
                netmask 255.255.255.0
                gateway 192.168.1.1
        
        systemctl restart networking.service

    * Altere o nameserver
        echo "nameserver 4.2.2.2" > /etc/resolv.conf

    * Instale o SSH
        apt install openssh-server

    * Atualize o Debian
        apt update

    * Aplique as atualizações
        apt upgrade

-------------------------------------

DEBIAN 10 - Docker

    <> Passo a Passo instalação (https://docs.docker.com/engine/install/debian/)

        * hostnamectl set-hostname DOCKER
            bash
        
        * apt-get install \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release

        * curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        * echo \
        "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
        $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

        * apt-get update

        * apt-get install docker-ce docker-ce-cli containerd.io

    <> Manipulação

        * docker run hello-world

        * docker run -d debian

        * docker images

        * docker run -it ubuntu bash
            docker ps
            docker ps -a

            exit (para sair do container)

        * docker container (apaga o container) prune 

        * docker rmi (apaga a imagem) hello-world 

        * docker rmi ubuntu

        * touch dockerfile
            cat dockerfile
                FROM debian:8.11
                RUN apt-get update && apt-get install apache2 -y && mv /var/www/html/index.html /var/www/html/index.html.old && echo "Meu 
                primeiro site hospedado via Docker" > /var/www/html/index.html
                
                EXPOSE 80
                CMD apache2ctl -D FOREGROUND
        
        * docker build -t [seu-docker-id]/apache2_3rm2021s2 .
            docker images

        * docker run -d -p 80:80 --name srvweb [seu-docker-id]/apache2_3rm2021s2
            docker ps

            <> Teste no navegador do Win10
                http://192.168.100.124/

        * docker exec -it srvweb bash
            cd /var/www/html
            ls

            <> Altere o aqruivo de configuração
                 echo "Alterado enquanto funcionava" > index.html

        * docker login -u [seu-usuário]

            <> Envie a imagem criada em seu repositório
                docker push [seu-docker-id]/apache2_3rm2021s2
